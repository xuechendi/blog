<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HA | XueChendi]]></title>
  <link href="http://xuechendi.github.io/blog/categories/ha/atom.xml" rel="self"/>
  <link href="http://xuechendi.github.io/"/>
  <updated>2013-12-04T21:02:00+08:00</updated>
  <id>http://xuechendi.github.io/</id>
  <author>
    <name><![CDATA[Chendi.Xue]]></name>
    <email><![CDATA[xuechendi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DRBD and Heartbeat]]></title>
    <link href="http://xuechendi.github.io/blog/2013/12/04/drbd-and-heartbeat/"/>
    <updated>2013-12-04T19:07:00+08:00</updated>
    <id>http://xuechendi.github.io/blog/2013/12/04/drbd-and-heartbeat</id>
    <content type="html"><![CDATA[<p>These days, need to deploy a HA solution in our setup, and just write all these down helping the next time deployment.</p>

<h2>The Overview</h2>

<p><img src="/images/ha/IMG_0045.PNG" alt="overview" width=80%></p>

<p>Here we have 2 setups, providing both web service for management and iscsi target service.
What we wanna have is all the LVs in setup1(222.31.76.144) has a mirror in setup2(222.31.76.228) &mdash; so we need DRBD
Then we use LV1 as lun0 to provide iscsi disk to client1, all client1 knows is that his iscsi target provider&rsquo;s ip address is 222.31.76.250(may be setup1 or setup2) &mdash; so we need heartbeat. Basically, setup1 will response to the client&rsquo;s request, only when setup&rsquo;s eth0 nic doesn&rsquo;t work(this will happen when setup1 is down), setup2 will continue to provide web service and iscsi service.</p>

<p>Ok, another problem, when we need setup2 can continue to provide iscsi service, we need disks in setup to can also be the primary node in drbd semantic, so when data written to setup2, data can be sync to setup1.</p>

<p>Let&rsquo;s just summary all the requirement here:
1. Using heartbeat to provide a virtual ip 222.31.76.250 and watch the liveness of both setups.
2. Using DRBD to sync LVs in setup1 and setup2, the syncronization can be both sides(dual primary).
3. Need to keep in mind, when the sync link(eth0,192.168.1.*) breaks, there will be a split brain situation in our DRBD setting, so we need to record who is the latest iscsi target provider and use that one to recover the DRBD setting.</p>

<h2>DRBD setting</h2>

<p>1.The installation
we need to install two parts of DRBD, the kmod who is the real implementation of drbd, and the drbdadm, which helps a lot to manage the drbd service.</p>

<p><code>bash drbd rpm
drbd83-8.3.15-2.el5.centos.x86_64.rpm       kmod-drbd83-8.3.15-3.el5.centos.x86_64.rpm
</code></p>

<p>2.The drbd config file
We can start from the drbd conf file /etc/drbd.conf</p>

<p>``` bash /etc/drbd.conf
#</p>

<h1>please have a a look at the example configuration file in</h1>

<h1>/usr/share/doc/drbd83/drbd.conf</h1>

<p>#
include &ldquo;drbd.d/global_common.conf&rdquo;;
include &ldquo;drbd.d/*.res&rdquo;;
```</p>

<p>As we can see, in this config file,it include a global_common.conf and *.res
The first one writes some common setting for drbd, things like the sync protocol(Async, semi-sync, sync), net rate setting, blah, blah&hellip;
The second one is what we need to build our resource, the config will be like below:</p>

<p>``` bash mpx.res
resource mpx {</p>

<pre><code>protocol C; 
net {
    allow-two-primaries; 
  }
syncer {
      rate 1024M;  //sync bandwidth
 }
on super {
    device /dev/drbd0;
    disk /dev/raid0/lv01;
    address 192.168.1.100:7789;
    meta-disk internal;        
}
on MPXHA {
    device /dev/drbd0;
    disk /dev/vg01/lv01;
    address 192.168.1.152:7789;
    meta-disk internal;        
}
</code></pre>

<p>}
```</p>

<p>The protocol part says we will use sync method in this resource
The net part says both nodes can be primary
The last two parts describe the drbd device and the nic they used to sync data(Here we can direclty connect two setup by ethernet line.)</p>

<p>The above *.res should has replication both in setup1 and setup2
After that there is few command we need to first time build this DRBD resource.</p>

<p>``` bash first building drbd resource
drbdadm create-md mpx // this should be done both in setup1 and setup2
service drbd restart // both in setup1 and setup2</p>

<p>drbdadm primary &mdash;force resource // only in setup1</p>

<p>drbd-overview // can be done both in setup1 or setup2, here I did in setup2
drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs          ro                 ds
0:mpx  SyncTarget  Secondary/Primary  Inconsistent/UpToDate  C
&hellip;    sync'ed:    25.4%              (1373576/1837720)K</p>

<p>&hellip; wait until</p>

<p>drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs         ro                 ds                 p  mounted  fstype
0:mpx  Connected  Secondary/Primary  UpToDate/UpToDate  C</p>

<p>drbdadm primary mpx // in setup2
drbd-overview
drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs         ro               ds
0:mpx  Connected  Primary/Primary  UpToDate/UpToDate  C
```</p>

<p>Here is when we use drbd sevice as iscsi lun,yeah, you need this copy both in setup1 and setup2</p>

<p>``` bash scst.conf</p>

<h1>Automatically generated by SCST Configurator v2.2.0.</h1>

<p>HANDLER vdisk_fileio {</p>

<pre><code>DEVICE vg01_lv01 {
    filename /dev/drbd0 // ￼ drbd 
}
</code></pre>

<p>}
TARGET_DRIVER iscsi {</p>

<pre><code>enabled 1
TARGET iqn.2011-1212.edu.cuc.storagelab:mpx.target1 {
    cpu_mask 0000ff
    enabled 1
    rel_tgt_id 1
    GROUP xcd {
        LUN 0 vg01_lv01
        INITIATOR iqn.2012-12.cn.edu.cuc.xcd:1234567
        INITIATOR iqn.1991-05.com.microsoft:win-p56rroe0srf
        cpu_mask 0000ff
    }
} 
</code></pre>

<p>}
```</p>

<h2>Heartbeat setting</h2>

<ol>
<li>The installation
Seems we can not simply get heartbeat in yum
Here is the solution</li>
</ol>


<p>``` console heartbeat installation
Step-1 : Make download folder under the root.
[root@setup1 download]# mkdir /download
[root@setup1 download]# cd /download/
Step-2 : Download EPEL repository.
[root@setup1 download]# wget <a href="ftp://mirror.switch.ch/pool/1/mirror/scientificlinux/6rolling/i386/os/Packages/epel-release-6-5.noarch.rpm">ftp://mirror.switch.ch/pool/1/mirror/scientificlinux/6rolling/i386/os/Packages/epel-release-6-5.noarch.rpm</a>
Step-3 : Install Epel RPM.
rpm -ivUh epel-release-6-5.noarch.rpm
warning: epel-release-6-5.noarch.rpm: Header V4 DSA/SHA1 Signature, key ID 192a7d7d: NOKEY
Preparing&hellip;                ########################################### [100%]
   1:epel-release           ########################################### [100%]
Step-4 : Edit epel.repo file ‘/etc/yum.repos.d/epel.repo’ change the line # 6 ‘enable=1 to enable=0′.
[root@setup1 download]# vi /etc/yum.repos.d/epel.repo
[epel]
name=Extra Packages for Enterprise Linux 6 &ndash; $basearch</p>

<h1>baseurl=<a href="http://download.fedoraproject.org/pub/epel/6/$basearch">http://download.fedoraproject.org/pub/epel/6/$basearch</a></h1>

<p>mirrorlist=<a href="http://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;amp;arch=$basearch">http://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;amp;arch=$basearch</a>
failovermethod=priority
enabled=0
CentOS 6 :<br/>
Step-5 : Now we are ready to install Heartbeat with yum command.
[root@setup1 download]# yum &mdash;enablerepo=epel install heartbeat
```</p>

<ol>
<li>The setting</li>
</ol>


<p><code>console
[root@setup1&amp;setup2 download]# cp /usr/share/doc/heartbeat-3.0.4/ha.cf /etc/ha.d/
[root@setup1&amp;setup2 download]# cp /usr/share/doc/heartbeat-3.0.4/haresources /etc/ha.d/
[root@setup1&amp;setup2 download]# cp /usr/share/doc/heartbeat-3.0.4/authkeys /etc/ha.d/
[root@setup1 download]# vim /etc/ha.d/ha.cf
debugfile /var/log/ha-debug
keepalive 2
deadtime 10
warntime 6
initdead 120
udpport 694
ucast eth0 222.31.76.228
node   super
node   MPXHA
auto_failback on
respawn hacluster /usr/lib64/heartbeat/ipfail
[root@setup2 download]# vim /etc/ha.d/ha.cf
debugfile /var/log/ha-debug
keepalive 2
deadtime 10
warntime 6
initdead 120
udpport 694
ucast eth0 222.31.76.144
node   super
node   MPXHA
auto_failback on
respawn hacluster /usr/lib64/heartbeat/ipfail
[root@setup1&amp;setup2 download]# vim /etc/ha.d/haresouces
super IPaddr::222.31.76.250/24/eth0
[root@setup1&amp;setup2 download]# service heartbeat restart
</code></p>

<h2>There is also one problem we mentioned before called &ldquo;split brain&rdquo;, here is the way to solve this situation</h2>

<p>This situation happens when the eth0(the link used to sync data beween drbd resources are broken), and both drbd will see itself as primary and the other as unknown</p>

<p><code>console when split brain happens
[root@super ~]# service drbd status
drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs          ro               ds                 p       mounted  fstype
0:mpx  StandAlone  Primary/Unknown  UpToDate/DUnknown  r-----
</code></p>

<p>The way to tackle this problem when both drbd device also act as the iscsi lun</p>

<p>```console How to solve split brain problem
service scst stop
drbdadm secondary mpx
drbdadm disconnect mpx
drbdadm &mdash; &mdash;discard-my-data connect mpx
ssh 222.31.76.144 &ldquo;drbdadm connect mpx&rdquo;</p>

<p>service drbd status</p>

<p>drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs          ro                 ds
0:mpx  SyncTarget  Secondary/Primary  Inconsistent/UpToDate  C
&hellip;    sync'ed:    25.4%              (1373576/1837720)K</p>

<p>drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs         ro                 ds                 p  mounted  fstype
0:mpx  Connected  Secondary/Primary  UpToDate/UpToDate  C</p>

<p>drbdadm primary mpx</p>

<p>drbd driver loaded OK; device status:
version: 8.3.11 (api:88/proto:86-96)
srcversion: 2D876214BAAD53B31ADC1D6
m:res  cs         ro               ds
0:mpx  Connected  Primary/Primary  UpToDate/UpToDate  C</p>

<p>service scst start
```</p>
]]></content>
  </entry>
  
</feed>
